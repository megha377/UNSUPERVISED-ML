IMPORTING LIBRARIES
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

READING DATASET
iris = pd.read_csv('Iris.csv')
print('data imported')

#determining the shape of dataset 
iris.shape

#first 5 values in the datset
iris.head()


#last 5 values in the dataset
iris.tail()

iris.info()

iris.describe()

FINDING THE OPTIMUM NUMBER OF CLUSTERS USING K-MEANS
#consists of attribute(inputs)
iris.iloc[:, [0, 1, 2, 3]].values


# Finding the optimum number of clusters for k-means classification x = iris.iloc[:, [0, 1, 2, 3]].values
from sklearn.cluster import KMeans
wcss = []
for i in range(1, 11):
 kmeans = KMeans(n_clusters = i, init = 'k-means++',
 max_iter = 300, n_init = 10, random_state = 0)
 kmeans.fit(x)
 wcss.append(kmeans.inertia_)
 
# Plotting the results onto a line graph, 
# `allowing us to observe 'The elbow'
plt.figure(figsize=(8,8))
plt.plot(range(1, 11), wcss)
plt.title('The elbow method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS') # Within cluster sum of squares
plt.show()


# Applying kmeans to the dataset / Creating the kmeans classifier
kmeans = KMeans(n_clusters = 3, init = 'k-means++',
 max_iter = 300, n_init = 10, random_state = 0)
y_kmeans = kmeans.fit_predict(x)

y_kmeans

VISUALISING
# Visualising the clusters - On the first two columns
plt.figure(figsize=(10,10))
plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1],
 s = 100, c = 'orange', label = 'Iris-setosa')
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1],
 s = 100, c = 'pink', label = 'Iris-versicolour')
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1],
 s = 100, c = 'red', label = 'Iris-virginica')
# Plotting the centroids of the clusters
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1],
 s = 100, c = 'yellow', label = 'Centroids')
plt.legend()

